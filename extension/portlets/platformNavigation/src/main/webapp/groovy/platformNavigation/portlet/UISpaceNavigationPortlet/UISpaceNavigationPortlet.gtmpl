
<%
    /**
     * Copyright ( C ) 2012 eXo Platform SAS.
     *
     * This is free software; you can redistribute it and/or modify it
     * under the terms of the GNU Lesser General Public License as
     * published by the Free Software Foundation; either version 2.1 of
     * the License, or (at your option) any later version.
     *
     * This software is distributed in the hope that it will be useful,
     * but WITHOUT ANY WARRANTY; without even the implied warranty of
     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
     * Lesser General Public License for more details.
     *
     * You should have received a copy of the GNU Lesser General Public
     * License along with this software; if not, write to the Free
     * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
     * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
     */

%>
<%
  import org.exoplatform.portal.mop.user.UserNavigation;
  import org.exoplatform.portal.mop.user.UserNode;
  import org.exoplatform.portal.webui.util.Util;
  import org.exoplatform.portal.mop.Visibility;
  import org.exoplatform.webui.organization.OrganizationUtils;
  import org.exoplatform.platform.webui.NavigationURLUtils;
  import org.exoplatform.social.core.service.LinkProvider;
  import java.util.Collection;
  import org.exoplatform.web.application.JavascriptManager;
  import org.gatein.common.text.EntityEncoder;

    void renderGroupPageNavigation(UserNavigation navigation) {
    	def nodes = uicomponent.getUserNodes(navigation);
    	if(nodes == null || nodes.isEmpty()) return ;
    	def ownerId = navigation.getKey().getName();
    	String navTitle = _ctx.appRes("UIPageNavigation.label.titleBar") ;
    	navTitle = navTitle.replace("{0}", OrganizationUtils.getGroupLabel(ownerId));
        String spacesNavigations= navigation.getKey().getName();
        if(spacesNavigations.indexOf("spaces") > 0) {
                int idx =0;
                for(UserNode node : nodes) {
                    renderPageNodeGroup(node, idx++ %2 == 0 ) ;
                }
        }
    }
	void renderPageNodeGroup(UserNode node, boolean flag) {
	    if(!node.getVisibility().equals(Visibility.DISPLAYED)) {
	      return;
	    }
		UserNode selectedNode = uicomponent.getSelectedNode();
		String tabStyleNavigation = "";
        if(selectedNode != null && node.getURI() == selectedNode.getURI()) {
            tabStyleNavigation = "spaceItemSelected";
        }

		String clazz = "";

		String	href = NavigationURLUtils.getURL(node);

		String icon = node.getIcon();
		if(icon == null) icon = "DefaultPageIcon";
		boolean toolong = (node.resolvedLabel.length() > 60);
		String label = ( toolong ? node.resolvedLabel.substring(0, 57) + "..." : node.resolvedLabel);
		String title = "";

		if(toolong) title = "title='$node.resolvedLabel'";
		else title = "";
        EntityEncoder entityEncoder = EntityEncoder.FULL;
		label = entityEncoder.encode(label);
		def imageSource = uicomponent.getImageSource(node.resolvedLabel);
        if (imageSource == null) {
          imageSource = LinkProvider.SPACE_DEFAULT_AVATAR_URL;
        }
		print """
			<li class="spaceItem $clazz $tabStyleNavigation">
		""";
						if(node.pageRef != null) {
								print """<a class="spaceIcon" href="$href" $title><img title="" alt="" src="$imageSource" />  $label</a>""";

						} else {
								print """<a class="spaceIcon" href="#" $title>$label</a>""";
						}

		print """
			</li>
		""" ;
	}

	if (uicomponent.renderSpacesLink()) {

    def spacesLink = NavigationURLUtils.getURLInCurrentPortal("spaces");
    def findSpacesLink = NavigationURLUtils.getURLInCurrentPortal("all-spaces");
	def groupNavigations = uicomponent.getGroupNavigations();
	def spaceTotal=groupNavigations.size();
	def MY_SPACES_MAX_NUMBER;
	if(uicomponent.getSpaceMaxNumber()!=0){
	MY_SPACES_MAX_NUMBER = uicomponent.getSpaceMaxNumber();

	}else{

	MY_SPACES_MAX_NUMBER=10;
	}

    def mySpacesDisplayed = 0;

%>
<%
  String restUrl = uicomponent.getRestUrl();
  String defaultValueForTextSearch = _ctx.appRes("UISpaceNavigationPortlet.msg.filter-spaces");
  def moreSpacesLabel = _ctx.appRes("UISpaceNavigationPortlet.label.more");
  def seeSpacesLabel = _ctx.appRes("UISpaceNavigationPortlet.label.see");
  String noSpace = _ctx.appRes("UISpaceNavigationPortlet.msg.no-space");
  String selectSpaceAction = URLEncoder.encode(uicomponent.event(uicomponent.LOAD_NAVIGATION_ACTION), "utf-8");
  def rcontext = _ctx.getRequestContext() ;
  def jsManager = rcontext.getJavascriptManager();
  jsManager.require("SHARED/navigation-spaces-search", "search").addScripts("search.init('" + uicomponent.id  + "','" + restUrl + "','" + defaultValueForTextSearch +"','" + noSpace + "','" + selectSpaceAction + "');");
%>

<div class="uiSpaceNavigationPortlet" id="$uicomponent.id">
  <h5 class="title"><%=_ctx.appRes("UISpaceNavigationPortlet.label.Spaces")%> <span class="numbers">($spaceTotal)</span></h5>
  <!-- Merge exoadmin:  navigation-->
    <div class="searchInput"><input type="text" class="searchText LostFocus" placeholder="Search Spaces"/></div>

	<ul class="spaceNavigation">

    <%

    if (groupNavigations!= null && !groupNavigations.isEmpty()) {

      for(navigation in groupNavigations) {
      	if (navigation.getKey().getName().indexOf("spaces") <0 || mySpacesDisplayed == -1){
      		break;
      	}
      	if(mySpacesDisplayed < MY_SPACES_MAX_NUMBER){
      		mySpacesDisplayed += 1;
      		renderGroupPageNavigation(navigation);
      	}else{
		    def spaceNotDisplayed=spaceTotal - mySpacesDisplayed;

      		mySpacesDisplayed = -1;
      		def moreSpacesLink = uicomponent.event("Increment");
			if(spaceNotDisplayed>0){
      		print """
      			<li class="MenuItem">
      				""" ;
      				print """
      				<a href="$moreSpacesLink" onclick="">$seeSpacesLabel $spaceNotDisplayed $moreSpacesLabel</a>
      				""" ;
      				print """
      			</li>
      		""" ;
      	}}
      } %>

    <% } %>
    <!-- FIN -->

	</ul>
</div>

 <div>
	<img title="" alt="" src="/eXoPlatformResources/skin/platformSkin/icons/icon_join.jpg" /><a class="EditorIcon TBIcon" href="<%= findSpacesLink %>">
	<%=_ctx.appRes("UISpaceNavigationPortlet.label.Join")%></a></div>
</div>
<% } %>
